# ────────────────────────────────────────────────
# vxMetin • English Language File 
# Version: 1.0.0
# ────────────────────────────────────────────────

gui:
  title-add-stone: "&aAdd New Stone"
  no-stones-title: "&cNo Registered Stones"
  no-stones-lore: "&7There are no registered stones."
  stone-lore-id: "&7UID: &f{id}"
  stone-lore-health: "&aHealth: &f{health}"
  stone-lore-respawn: "&bRespawn Time: &f{respawn}s"
  stone-lore-click: "&eClick to select this stone."
  title-admin: "&6Metin Stone Management Panel"
  button-add: "&aAdd Stone"
  button-lore-add: "&7Creates a new stone manually."
  button-remove: "&cRemove Stone"
  button-lore-remove: "&7Deletes an existing stone from the list."
  button-respawn: "&eRespawn Stone"
  button-lore-respawn: "&7Force respawn of the selected stone."
  title-stonelist: "&eRegistered Stones"
  title-stonelist-remove: "&cStone Removal Menu"
  title-stonelist-respawn: "&aRespawn Menu"
  title-stonelist-teleport: "&bTeleport Menu"
  registered-stone-name: "&aRegistered / Waiting Stone"
  title-confirm-delete: "&cDelete Confirmation"
  confirm-yes: "&aYes, delete!"
  confirm-yes-lore: "&7Confirm."
  confirm-no: "&cNo, cancel"
  confirm-no-lore: "&7Cancels this operation."
  stone-lore-location: "&7Location: &f{world}, {x}, {y}, {z}"
  stone-lore-location-unknown: "&cUnknown location"
  filler-item: "GRAY_STAINED_GLASS_PANE"
  stone-lore-world: "&7World: &f{world}"
  stone-lore-coordinates: "&7Coordinates: &fX:{x} Y:{y} Z:{z}"
  action-remove: "&cClick to remove this stone."
  action-teleport: "&bClick to teleport to this stone."
  action-respawn: "&aClick to respawn this stone."
  stone-lore-title: "&eStone: &f{stone}"
  stone-lore-uid: "&7Unique ID: &f{uid}"
  title-stone-list-prefix: "&6Metin Stones •"
  button-add-label: "&aAdd Stone"
  button-remove-label: "&cRemove Stone"
  button-respawn-label: "&eRespawn Stone"
  mode-remove: "Remove Mode"
  mode-respawn: "Respawn Mode"
  confirm-delete-lore-prefix: "&7Delete stone with ID: "
  title-remove: "&cRemoval Menu"
  title-teleport: "&bTeleport Menu"
  title-respawn: "&aRespawn Menu"
  list-title: "&eActive Stones"
  title-confirm: "&cDelete Confirmation"

hologram:
  respawn-line-name: "&c{stone} &7is respawning..."
  respawn-line-timer: "&eTime left to respawn: &f{time}s"
  no-damage-yet: "&7No one has dealt damage to this stone yet."
  topdamager-line: "&6#{rank}&7 {player}: &c{damage}"

debug:
  hologram-base-offset: "[DEBUG] Hologram base height loaded: {offset}"
  hologram-created: "[DEBUG] New hologram created: {id} (offset: {offset}) @ {x}, {y}, {z}"
  chunk-loaded: "[DEBUG] Chunk loaded: X={x}, Z={z}"
  chunk-load-fail: "[DEBUG] Failed to load chunk!"
  respawn-update-fail: "[DEBUG] Failed to update hologram after respawn."
  respawn-retry: "[DEBUG] Respawn retry triggered: {id}"
  respawn-complete: "[DEBUG] Respawn completed: {id}"
  hologram-removed: "[DEBUG] Hologram removed: {id}"
  hologram-cleared: "[DEBUG] All holograms cleared."
  invalid-stone-id: "[DEBUG] Invalid stone ID: {id}"
  stone-given: "[DEBUG] Stone given to player: {id} ({uid})"
  open-add-menu: "[DEBUG] Player {player} opened the AddStone menu."
  open-confirm: "[DEBUG] Player {player} opened the confirmation window (UID: {uid})"
  force-respawn: "[DEBUG] Forced respawn initiated: {uid}"

messages:
  invalid-stone-data: "&cInvalid stone data!"
  invalid-stone-id: "&cInvalid stone ID: &f{id}"
  received-stone: "&aYou have received a new stone: &e{stone}"
  stone-respawned: "&aStone has respawned: &e{uid}"
  stone-deleted: "&cStone deleted: &f{uid}"
  action-cancelled: "&eAction cancelled."
  no-stone-id: "&cNo stone ID found for deletion!"
  spawn-manager-error: "&cFailed to start the spawn manager!"
  delete-error: "&cError while deleting stone: &f{error}"
  delete-cancelled: "&eDeletion cancelled."
  stone-respawning: "&eThis stone is currently respawning!"
  stone-damage: "&7You dealt &c{damage}&7 damage to &e{stone}&7 (&f{current}/{max}&7)"
  top-damager: "&6#{rank} &e{player} &7- &c{damage} damage"
  broadcast-stone-destroyed: "&e{player} &7has destroyed the stone &c{stone}&7!"
  player-stone-destroyed: "&aYou destroyed the stone &e{stone}&a!"
  no-permission: "&cYou do not have permission for this action!"
  stone-already-placed: "&cA stone with this UID already exists."
  stone-already-exists: "&cA stone already exists at this location!"
  player-stone-placed: "&aYou successfully placed the stone: &e{stone}"
  place-error: "&cAn error occurred while placing the stone!"
  invalid-stone-selection: "&cInvalid stone selected!"
  teleported-to-stone: "&aTeleported to stone: &e{uid}"
  usage: "&eUsage: /metin <admin/reload>"
  admin-open: "&aAdmin panel opened."
  unknown-subcommand: "&cUnknown command! &7Usage: /metin <admin/reload>"
  broadcast-stone-removed: "&cA Metin Stone has been removed: &e{stone}"
  reload-success: "&aConfiguration files successfully reloaded!"
  reload-log: "&7[vxMetin] &aAll language and configuration files have been refreshed."

  # Language file & log messages
  lang-created: "&aLanguage file created: &e{file}"
  lang-loaded: "&aLanguage file loaded: &e{locale}"
  lang-reloaded: "&eLanguage file reloaded: &f{locale}"

  # Logging system
  log-file-created: "&aLog file successfully created."
  log-file-create-failed: "&cFailed to create log file!"
  log-using-yaml: "&7Logging system is running in YAML mode."
  log-sqlite-connected: "&aSQLite database connected: &f{file}"
  log-sqlite-failed: "&cSQLite connection failed!"
  log-mysql-connected: "&aMySQL connection established: &f{host}/{db}"
  log-mysql-failed: "&cMySQL connection failed!"
  log-sql-failed: "&cFailed to save SQL data: &f{error}"
  log-save-failed: "&cFailed to save YAML log!"
  log-reloaded: "&aLogging system successfully reloaded."
  stones-file-created: "&aStone registry file (stones.yml) created."
  broadcast-stone-broken: "&e{player} &7has broken the stone &c{stone}&7!"
  unknown-player: "&7Unknown player"

console:
  no-stones-section: "⚠️ Missing or unreadable 'stones:' section!"
  invalid-material: "Invalid material defined: {id}"
  stone-load-failed: "Failed to load stone (ID: {id}) Error: {error}"
  stones-loaded: "{count} stones successfully loaded. Skipped: {skipped}"
  stone-saved: "New stone saved: {uid}"
  stone-save-failed: "Failed to save stone ({uid}) — Error: {error}"
  stone-deleted: "Stone deleted: {uid}"
  stone-delete-failed: "Failed to delete stone ({uid}) — Error: {error}"
  respawn-start: "Respawn process started for {uid}"
  stone-removed: "Stone removed: {uid}"

  # ───────── Spawn Operations ─────────
  spawnall-failed: "spawnAll task failed: {error}"
  auto-spawn-enabled: "Automatic stone respawn enabled (delay: {delay}s)"
  spawnall-no-saved-stones: "No saved stones found."
  spawnall-loading-count: "{count} saved stones are being respawned..."
  spawnall-skip-already-active: "[SpawnAll] Skipped (already active): {uid}"
  spawnall-load-skipped: "Loading skipped: ID={id} / UID={uid}"
  spawnall-loaded: "[SpawnAll] Loaded: {stone} @ {location}"
  spawnstone-skip-already-active: "[SpawnStone] Skipped (already active): {uid}"
  spawnstone-created: "New stone created: {uid} @ {location}"
  spawnstone-error: "spawnStone error: {error}"

  # ───────── Force Respawn ─────────
  force-respawn-location-not-found: "Force respawn location not found: {uid}"
  force-respawn-id-not-found: "Force respawn ID not found: {uid}"
  force-respawn-complete: "Force respawn completed: {uid}"

  # ───────── Storage System ─────────
  storage-no-stones: "safeLoadAll() → No stones found, returning empty map."
  storage-loaded: "safeLoadAll() → {count} stones loaded."
  storage-load-error: "Error during loadAll(): {error}"
  storage-get-location-error: "getStoneLocation() error: {error}"

  # ───────── MySQL / SQLite / YAML ─────────
  hikari-started: "HikariCP connection pool initialized."
  hikari-disabled: "HikariCP disabled — using standard JDBC."
  hikari-closed: "HikariCP connection pool closed."

  mysql-connected: "MySQL connection established successfully! Table: {table}"
  mysql-debug: "MySQL connection verified: {url}"
  mysql-connection-error: "MySQL connection error: {error}"
  mysql-save-invalid-location: "saveStone failed: invalid location ({uid})"
  mysql-saved: "MySQL → Stone saved: {uid} ({world})"
  mysql-save-error: "MySQL save error: {error}"
  mysql-deleted: "MySQL → Stone deleted: {uid}"
  mysql-delete-error: "MySQL delete error: {error}"
  mysql-loaded: "{count} stones loaded from MySQL."
  mysql-read-error: "MySQL read error: {error}"
  world-not-found: "World not found: {world} (stone: {uid})"

  sqlite-loaded: "SQLite database loaded: {file}"
  sqlite-connection: "Connection established: {path}"
  sqlite-connection-error: "SQLite connection error: {error}"
  sqlite-invalid-location: "saveStone failed: invalid location ({uid})"
  sqlite-saved: "SQLite → Stone saved: {uid} ({world} {x},{y},{z})"
  sqlite-save-error: "SQLite save error: {error}"
  sqlite-deleted: "SQLite → Stone deleted: {uid}"
  sqlite-delete-error: "SQLite delete error: {error}"
  sqlite-loaded-stones: "{count} stones loaded from SQLite."
  sqlite-read-error: "SQLite read error: {error}"
  sqlite-closed: "SQLite connection closed."
  sqlite-close-error: "SQLite close error: {error}"
  sqlite-reconnecting: "SQLite reconnecting..."
  sqlite-reconnect-error: "SQLite reconnection error: {error}"

  yaml-created: "New YAML database created: {path}"
  yaml-loaded: "YAML database successfully loaded."
  yaml-create-error: "Failed to create YAML database: {error}"
  yaml-invalid-location: "saveStone failed: invalid location ({uid})"
  yaml-saved: "YAML → Stone saved: {uid} @ {world} ({x},{y},{z})"
  yaml-not-loaded: "YAML not loaded before delete call: {uid}"
  yaml-deleted: "YAML → Stone deleted: {uid}"
  yaml-null: "YAML not loaded, returning empty map."
  yaml-no-stones: "No stone records found in YAML."
  yaml-load-error: "YAML stone load error ({uid}): {error}"
  yaml-loaded-count: "{count} stones successfully loaded from YAML."
  yaml-closed: "YAML storage connection closed."
  yaml-save-error: "YAML save error: {error}"

  # ───────── Storage Type Selection ─────────
  storage-selected-sqlite: "Storage type selected: SQLite"
  storage-selected-mysql: "Storage type selected: MySQL"
  storage-selected-yaml: "Storage type selected: YAML"
  storage-invalid-type: "Invalid storage.type: {type} — falling back to YAML."
  storage-initialized: "{type} storage initialized successfully."
  storage-init-error: "Error initializing storage system ({type}): {error}"
  storage-fallback: "Switching to YAML fallback..."
  storage-fallback-success: "YAML fallback initialized successfully."
  storage-fallback-failed: "Failed to initialize YAML fallback: {error}"

  # ───────── Plugin Lifecycle ─────────
  plugin-starting: "vxMetin is starting..."
  plugin-enabled: "vxMetin enabled successfully. Locale: {locale}"
  plugin-stopping: "vxMetin is shutting down safely..."
  storage-active: "Active storage system: {type}"
  storage-closed: "Storage connection closed successfully."
  storage-close-error: "Failed to close storage connection: {error}"
  holograms-cleared: "All holograms cleared successfully."
  holograms-failed: "Failed to clear holograms: {error}"
  log-closing: "Closing log connections..."
  log-close-error: "Log connection close error: {error}"
  listeners-registered: "All listeners registered successfully."
  listeners-failed: "Listener registration failed: {error}"
  reload-storage-failed: "Storage reload failed: {error}"
  hologram-reloaded: "Hologram height reloaded: {offset}"
